.text
.global main
.global _start

#include "header.h"

main:
start:
push {r4, lr}

#OPEN (CREATE) FILE
ldr r0, =newfile
mov r1, #0x02 @ create R/W
mov r2, #384 @ = 600 octal (me)
bl open

cmp r0, #-1 @ file descriptor
beq err

mov r4, r0 @ save file_descriptor

mov r0, r4
ldr r1, =1795
mov r2, #0x46
bl ioctl

#WRITE TO FILE
mov r0, r4 @ file_descriptor
ldr r1, =test @ address of buffer
mov r2, #192 @ length from read
bl write

#CLOSE FILE
bl close
mov r0, r4 @ return file_descriptor as error code

exit: pop {r4, lr}
mov r7, #1 @ exit
svc 0

err: mov r4, r0
mov r0, #1
ldr r1, =errmsg
mov r2, #(errmsg - errmsgend)
mov r7, #4
svc 0

mov r0, r4
b exit

.data

errmsg: .asciz "create failed"
errmsgend:
newfile: .asciz "/dev/i2c-1"
prompt: .asciz "Input a string: \n"
promptend:
buffer: .byte 100
test: .byte  0x00, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0x0, 0xFF, 0xFF, 0x0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0xF5, 0x7E, 0x84, 0x50, 0xF5, 0x7E, 0xF0, 0xCC, 0xF7, 0x76, 0x4, 0xE8, 0xDE, 0x76, 0x54, 0x5C, 0xDE, 0x76, 0x11, 0x7B, 0x9C, 0x7C, 0xD8, 0xE3, 0xE4, 0x3, 0x2B, 0x3, 0x1, 0x0, 0x48, 0x2, 0x1, 0x0, 0x30, 0xA9, 0xF6, 0x76, 0xF0, 0xCC, 0xF7, 0x76, 0xE8, 0x50, 0xF5, 0x7E, 0x88, 0xD8, 0xF7, 0x76, 0xBC, 0x92, 0xF6, 0x76, 0x0, 0xD0, 0xF7, 0x76, 0x0, 0x0, 0x0, 0x0, 0x30, 0xB2, 0xF7, 0x76, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x7B, 0x9C, 0x7C, 0x18, 0xDB, 0xF7, 0x76, 0x0, 0x0, 0x0, 0x0, 0xE8, 0x50, 0xF5, 0x7E, 0xF0, 0x50, 0xF5, 0x7E, 0x5C, 0x51, 0xF5, 0x7E, 0x2B, 0x3, 0x1, 0x0, 0x44, 0x51, 0xF5, 0x7E, 0xFC, 0x6B, 0xF5, 0x76, 0xF0, 0x50, 0xF5, 0x7E, 0xBC, 0xDA, 0xF7, 0x76, 0x2, 0x0, 0x0, 0x0, 0x58, 0xB2, 0xF7, 0x76, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x60, 0xD9, 0xF7, 0x76, 0x0, 0x0, 0xFF, 0x0, 0x0, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0xDB, 0xF7, 0x76, 0x60, 0xD9, 0xF7, 0x76, 0xFF, 0xFF, 0xFF, 0xFF, 0x0, 0x0, 0x0, 0x0, 0x64, 0x75, 0xDE, 0x76, 0x40, 0xAF, 0xF7, 0x76, 0x0, 0x0, 0xFF, 0x0, 0xEC, 0xBB, 0xF1, 0x76, 0x50, 0xDD, 0xF1, 0x76, 0xE8, 0x5, 0x0, 0x0, 0x44, 0x4, 0x0, 0x0, 0xEC, 0xBB, 0xF1, 0x76, 0x50, 0xDD, 0xF1, 0x76, 0xE8, 0x5, 0x0, 0x0, 0x44, 0x4, 0x0, 0x0, 0xEC, 0xBB, 0xF1, 0x76, 0x8, 0xE0, 0xF7, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0xD0, 0xF7, 0x76, 0x0, 0x91, 0xE4, 0x76, 0x50, 0xDD, 0xF1, 0x76, 0xEC, 0xBB, 0xF1, 0x76, 0x15, 0xD, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0xA, 0x0, 0x0, 0x0, 0xEC, 0xBB, 0xF1, 0x76, 0x14, 0xD, 0x1, 0x0, 0xC8, 0x51, 0xF5, 0x7E, 0x0, 0x0, 0x0, 0x0, 0x50, 0xB1, 0xE4, 0x76, 0x50, 0xDD, 0xF1, 0x76, 0xD0, 0xB5, 0xE4, 0x76, 0x1, 0x0, 0x0, 0x0, 0x50, 0xDD, 0xF1, 0x76, 0xEC, 0xBB, 0xF1, 0x76, 0xD4, 0xF6, 0xE3, 0x76
